<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~   WSO2 Inc. licenses this file to you under the Apache License,
  ~   Version 2.0 (the "License"); you may not use this file except
  ~   in compliance with the License.
  ~   You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing,
  ~  software distributed under the License is distributed on an
  ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~  KIND, either express or implied.  See the License for the
  ~  specific language governing permissions and limitations
  ~  under the License.
  -->
<template name="createPlan" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="planCode" description="The unique code to identify the plan."/>
    <parameter name="name" description="The plan name."/>
    <parameter name="unitAmountInCents" description="The amount of a unit in cents."/>
    <parameter name="description" description="The plan description."/>
    <parameter name="accountingCode" description="The accounting code for related invoice line items."/>
    <parameter name="planIntervalUnit" description="The plan interval unit like days,months."/>
    <parameter name="planIntervalLength" description="The plan interval length."/>
    <parameter name="trialIntervalUnit" description="The trial interval unit like days,months."/>
    <parameter name="trialIntervalLength" description="The trial interval length."/>
    <parameter name="setupFeeInCents" description="The fee for setup in cents."/>
    <parameter name="totalBillingCycles" description="The number of billing cycles before the plan stops renewing."/>
    <parameter name="unitName" description="The unit description for the quantity."/>
    <parameter name="displayQuantity" description="The display quantity is shown on the hosted payment page if true."/>
    <parameter name="successUrl" description="The URL to redirect to after signup."/>
    <parameter name="cancelUrl" description="The URL to redirect to on canceled signup."/>
    <parameter name="taxExempt" description="The tax exempt status, if true exempts tax on the plan."/>
    <parameter name="taxCode" description="The tax code."/>
    <sequence>
        <property name="uri.var.planCode" expression="$func:planCode"/>
        <property name="uri.var.name" expression="$func:name"/>
        <property name="uri.var.unitAmountInCents" expression="$func:unitAmountInCents"/>
        <property name="uri.var.description" expression="$func:description"/>
        <property name="uri.var.accountingCode" expression="$func:accountingCode"/>
        <property name="uri.var.planIntervalUnit" expression="$func:planIntervalUnit"/>
        <property name="uri.var.planIntervalLength" expression="$func:planIntervalLength"/>
        <property name="uri.var.trialIntervalUnit" expression="$func:trialIntervalUnit"/>
        <property name="uri.var.trialIntervalLength" expression="$func:trialIntervalLength"/>
        <property name="uri.var.setupFeeInCents" expression="$func:setupFeeInCents"/>
        <property name="uri.var.totalBillingCycles" expression="$func:totalBillingCycles"/>
        <property name="uri.var.unitName" expression="$func:unitName"/>
        <property name="uri.var.displayQuantity" expression="$func:displayQuantity"/>
        <property name="uri.var.successUrl" expression="$func:successUrl"/>
        <property name="uri.var.cancelUrl" expression="$func:cancelUrl"/>
        <property name="uri.var.taxExempt" expression="$func:taxExempt"/>
        <property name="uri.var.taxCode" expression="$func:taxCode"/>
        <payloadFactory media-type="xml">
            <format>
                <plan xmlns="">
                    <plan_code>$1</plan_code>
                    <name>$2</name>
                    <unit_amount_in_cents>$3</unit_amount_in_cents>
                    <setup_fee_in_cents>$4</setup_fee_in_cents>
                </plan>
            </format>
            <args>
                <arg expression="get-property('uri.var.planCode')"/>
                <arg expression="get-property('uri.var.name')"/>
                <arg expression="get-property('uri.var.unitAmountInCents')"/>
                <arg expression="get-property('uri.var.setupFeeInCents')"/>
            </args>
        </payloadFactory>
        <script language="js">
        <![CDATA[
            var description = mc.getProperty('uri.var.description');
            var accountingCode = mc.getProperty('uri.var.accountingCode');
            var planIntervalUnit = mc.getProperty('uri.var.planIntervalUnit');
            var planIntervalLength = mc.getProperty('uri.var.planIntervalLength');
            var trialIntervalUnit = mc.getProperty('uri.var.trialIntervalUnit');
            var trialIntervalLength = mc.getProperty('uri.var.trialIntervalLength');
            var totalBillingCycles = mc.getProperty('uri.var.totalBillingCycles');
            var unitName = mc.getProperty('uri.var.unitName');
            var displayQuantity = mc.getProperty('uri.var.displayQuantity');
            var successUrl = mc.getProperty('uri.var.successUrl');
            var cancelUrl = mc.getProperty('uri.var.cancelUrl');
            var taxExempt = mc.getProperty('uri.var.taxExempt');
            var taxCode = mc.getProperty('uri.var.taxCode');
            
            //Get the existing payload
            var payload = mc.getPayloadXML();
            
            if (description != null && description != "") {
               payload.description = description;
            }
            
            if (accountingCode != null && accountingCode != "") {
               payload.accounting_code = accountingCode;
            }
            
            if (planIntervalUnit != null && planIntervalUnit != "") {
               payload.plan_interval_unit = planIntervalUnit;
            }
            
            if (planIntervalLength != null && planIntervalLength != "") {
               payload.plan_interval_length = planIntervalLength;
            }
            
            if (trialIntervalUnit != null && trialIntervalUnit != "") {
               payload.trial_interval_unit = trialIntervalUnit;
            }
            
            if (trialIntervalLength != null && trialIntervalLength != "") {
               payload.trial_interval_length = trialIntervalLength;
            }
            
            if (totalBillingCycles != null && totalBillingCycles != "") {
               payload.total_billing_cycles = totalBillingCycles;
            }
            
            if (unitName != null && unitName != "") {
               payload.unit_name = unitName;
            }
            
            if (displayQuantity != null && displayQuantity != "") {
               payload.display_quantity = displayQuantity;
            }
            
            if (successUrl != null && successUrl != "") {
               payload.success_url = successUrl;
            }
            
            if (cancelUrl != null && cancelUrl != "") {
               payload.cancel_url = cancelUrl;
            }
            
            if (taxExempt != null && taxExempt != "") {
               payload.tax_exempt = taxExempt;
            }
            
            if (taxCode != null && taxCode != "") {
               payload.tax_code = taxCode;
            }
            //Set the newly constructed payload
            mc.setPayloadXML(payload);
         ]]>
        </script>
        <!-- Remove values element used as root element for multiroot cases via XSLT -->
        <xslt key="recurly_removeRootElement.xslt"/>
        <call>
            <endpoint>
                <http method="post" uri-template="{uri.var.apiUrl}/plans"/>
            </endpoint>
        </call>
        <!-- Remove custom Headers from the API Response -->
        <header name="X-RateLimit-Limit" action="remove" scope="transport"/>
        <header name="X-RateLimit-Remaining" action="remove" scope="transport"/>
        <header name="X-UA-Compatible" action="remove" scope="transport"/>
        <header name="X-RateLimit-Reset" action="remove" scope="transport"/>
        <header name="X-Request-Id" action="remove" scope="transport"/>
        <header name="X-Frame-Options" action="remove" scope="transport"/>
        <header name="X-XSS-Protection" action="remove" scope="transport"/>
        <header name="X-Content-Type-Options" action="remove" scope="transport"/>
        <header name="Strict-Transport-Security" action="remove" scope="transport"/>
        <header name="X-Records" action="remove" scope="transport"/>
        <header name="WWW-Authenticate" action="remove" scope="transport"/>
    </sequence>
</template>